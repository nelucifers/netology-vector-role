---
- name: Create directory
  ansible.builtin.file:
    path: "{{ vector_tmp_dir }}"
    state: directory
    mode: '775'
  tags:
  - vector

- name: Get archive
  ansible.builtin.get_url:
    url: https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-musl.tar.gz
    dest: "{{ vector_tmp_dir }}/vector-{{ vector_version }}.tar.gz"
    mode: '775'
  tags:
  - vector

- name: Unarchive
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ vector_tmp_dir }}/vector-{{ vector_version }}.tar.gz"
    dest: "{{ vector_tmp_dir }}"
    extra_opts: [--strip-components=2]
  tags:
  - vector

- name: Create group
  ansible.builtin.group:
    name: "{{ vector_group }}"
    state: present
  tags:
  - vector

- name: Create user
  ansible.builtin.user:
    name: "{{ vector_user }}"
    groups: "{{ vector_group }}"
    state: present
  tags:
  - vector

- name: Copy binary file
  ansible.builtin.copy:
    remote_src: true
    src: "{{ vector_tmp_dir }}/bin/vector"
    dest: /usr/bin
    mode: '755'
    owner: "{{ vector_user }}"
    group: "{{ vector_group }}"
  tags:
  - vector

- name: Create directory on /etc
  ansible.builtin.file:
    path: "{{ vector_dir }}"
    state: directory
    owner: "{{ vector_user }}"
    group: "{{ vector_group }}"
    mode: '755'
  tags:
  - vector

- name: Copy congif file
  ansible.builtin.template:
    src: templates/vector.toml.j2
    dest: "{{ vector_dir }}/vector.toml"
    owner: "{{ vector_user }}"
    group: "{{ vector_group }}"
    mode: '755'
  tags:
  - vector

- name: Create directory on /var/lib
  ansible.builtin.file:
    path: "{{ vector_data_dir }}"
    state: directory
    owner: "{{ vector_user }}"
    group: "{{ vector_group }}"
    mode: '755'
  tags:
  - vector

- name: Copy service file
  ansible.builtin.copy:
    remote_src: true
    src: "{{ vector_tmp_dir }}/etc/systemd/vector.service"
    dest: /usr/lib/systemd/system
    mode: '644'
  tags:
  - vector

- name: Start service
  ansible.builtin.service:
    name: vector
    state: started
  register: command_result
  failed_when:
    - command_result.failed
    - '"unknown state" not in command_result.msg'
  tags:
  - vector
